//file:noinspection GroovyAssignabilityCheck
plugins {
    id 'maven-publish'
    id 'signing'
    id 'java'
}

group = 'io.github.liyze09'
version = '1.0'

repositories {
    maven {
        url "https://maven.aliyun.com/repository/public"
    }
    maven {
        url "https://maven.aliyun.com/repository/gradle-plugin"
    }
    maven {
        name = "OSSRH"
        if (project.version.toString().endsWith("-SNAPSHOT")) {
            url = "https://s01.oss.sonatype.org/content/repositories/snapshots"
        } else {
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
        }
        credentials {
            username = findProperty("OSSRH_USERNAME") ?: System.getenv("OSSRH_USERNAME")
            password = findProperty("OSSEH_PASSWORD") ?: System.getenv("OSSRH_PASSWORD")
        }
    }
    mavenCentral()
}

dependencies {
    //https://mvnrepository.com/artifact/org.jetbrains/annotations
    implementation 'org.jetbrains:annotations:24.0.1'
    //https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation 'org.slf4j:slf4j-api:2.0.7'
    //https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    implementation 'ch.qos.logback:logback-classic:1.4.7'
    //https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    //https://mvnrepository.com/artifact/org.smartboot.http/smart-http-server
    implementation 'org.smartboot.http:smart-http-server:1.2.1'
    //https://mvnrepository.com/artifact/com.moandjiezana.toml/toml4j
    implementation 'com.moandjiezana.toml:toml4j:0.7.2'
    //https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation 'com.google.code.gson:gson:2.10.1'
    //https://mvnrepository.com/artifact/org.smartboot.socket/aio-pro
    implementation 'org.smartboot.socket:aio-pro:1.5.29'
}
test {

}
sourceSets{
    java
}
jar{
    from("LICENSE")
    manifest {
        attributes 'Manifest-Version': '1.0'
        attributes 'Main-Class': 'net.liyze.basin.core.Main'
        attributes 'Class-Path': 'data/jars'
        attributes 'Created-By': 'Gradle 8'
        attributes 'Built-By': 'Liyze09'
        attributes 'Build-Jdk': Runtime.version().toString()
        attributes 'Export-Command': 'net.liyze.basin.core.InternalPluginDemo'
        attributes 'Boot-Class': 'net.liyze.basin.core.InternalPluginDemo'
    }
}
tasks.register('copyJar', Copy) {
    System.out.println(System.getenv("OSSRH_USERNAME"))
    from configurations.runtimeClasspath
    into('build/libs/data/jars')
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
java {
    withSourcesJar()
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'Basin'
            from components.java
            pom {
                name = 'basin'
                description = ''
                url = 'hjttps://github.com/Liyze09/Basin'
                licenses {
                    license {
                        name = 'GPLv3'
                        url = ''
                    }
                }
                developers {
                    developer {
                        id = 'Liyze09'
                        name = 'Yuze Li'
                        email = 'a52990419@outlook.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/Liyze09/Basin.git'
                    developerConnection = 'scm:git:ssh://github.com/Liyze09/Basin.git'
                    url = 'https://github.com/Liyze09/Basin'
                }
            }
        }
    }
}
signing {
    sign(publishing.publications.mavenJava)
}