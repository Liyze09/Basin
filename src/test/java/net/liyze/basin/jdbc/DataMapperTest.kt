/*
 * Copyright (c) 2023 Liyze09
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package net.liyze.basin.jdbc

import net.liyze.basin.common.jdbc.DataMapper
import net.liyze.basin.common.jdbc.JdbcPool
import org.junit.jupiter.api.Disabled
import org.junit.jupiter.api.Test

class DataMapperTest {
    @Test
    @Disabled
    fun test() {
        val jdbcPool = JdbcPool()
        jdbcPool.connect("jdbc:hsqldb:data/db", "sa", "")
        jdbcPool execute {
            it.createStatement().execute("DROP TABLE IF EXISTS classes")
            it.createStatement().execute(
                "CREATE TABLE classes (" +
                        "id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY," +
                        "name VARCHAR(100) NOT NULL," +
                        "count INT NOT NULL," +
                        "PRIMARY KEY (id)" +
                        ")"
            )
            //it.createStatement().execute("SHUTDOWN")
        }
        val dataMapper = DataMapper("classes", jdbcPool, Class::class.java)
        val rs = dataMapper.put(Class("c77", 44))
        println(dataMapper.get(rs).count)
    }

    data class Class(@JvmField val name: String, @JvmField val count: Int)
}